{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.js","api/index.js","components/Chart/Chart.js","components/CountryPicker/CountryPicker.js","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/covid19.png"],"names":["module","exports","Cards","data","confirmed","deaths","recovered","lastUpdate","grids","style","styles","textSecondary","end","value","body2","className","container","Grid","spacing","justify","map","gridItem","i","item","key","component","Card","xs","md","card","CardContent","Typography","color","variant","start","duration","separator","Date","toDateString","url","fetchData","country","a","modifiedUrl","axios","get","console","log","fetchDailyData","modifiedData","total","date","reportDate","fetchCountries","countries","name","Chart","state","dailyData","this","setState","props","countryData","lineChartData","barChartData","barChartOptions","length","labels","datasets","label","borderColor","fill","backgroundColor","legend","display","title","text","options","React","Component","CountryPicker","onCountryChange","FormControl","NativeSelect","defaultValue","onChange","e","target","index","App","handleCountryChange","image","src","covid19","alt","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5aa0b3bc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"confirmed\":\"Cards_confirmed__iMMyf\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react'\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core'\nimport CountUp from 'react-countup'\n\nimport styles from './Cards.module.css'\n\nexport default function Cards ({ data }) {\n  const {\n    confirmed,\n    deaths,\n    recovered,\n    lastUpdate\n  } = data\n\n  let grids = []\n\n  if(confirmed){\n    grids = [\n      {\n        style: styles.confirmed,\n        textSecondary: 'Confirmed',\n        end: confirmed.value,\n        body2: 'Number of active cases'\n      },\n      {\n        style: styles.recovered,\n        textSecondary: 'Recovered',\n        end: recovered.value,\n        body2: 'Number of people recovered'\n      },\n      {\n        style: styles.deaths,\n        textSecondary: 'Deaths',\n        end: deaths.value,\n        body2: 'Number of deaths'\n      }\n    ]\n  }\n\n  if(!confirmed) return 'Loading...'\n\n  return (\n    <div className={styles.container}>\n      <Grid container spacing={3} justify='center' >\n        {grids.map((gridItem, i) => (\n          <Grid item key={i} component={Card} xs={12} md={3} className={`${styles.card} ${gridItem.style}`} >\n            <CardContent>\n              <Typography color='textSecondary' >{gridItem.textSecondary}</Typography>\n              <Typography variant='h5' >\n                <CountUp\n                  start={0}\n                  end={gridItem.end}\n                  duration={3}\n                  separator=','\n                />\n              </Typography>\n              <Typography color='textSecondary' >{new Date(lastUpdate).toDateString()}</Typography>\n              <Typography variant='body2' >{gridItem.body2}</Typography>\n            </CardContent>\n          </Grid>\n        ))}\n      </Grid>\n    </div>\n  )\n}","import axios from 'axios'\n\n// const url = 'https://api.covid19api.com'\nconst url = 'https://covid19.mathdro.id/api'\n\nexport const fetchData = async (country) => {\n  let modifiedUrl = url\n\n  if(country) {\n    modifiedUrl = `${url}/countries/${country}`\n  }\n\n  try {\n    const { data } = await axios.get(`${modifiedUrl}`)\n\n    return data\n\n  } catch (error) {\n    console.log(error)\n  }\n}\n\nexport const fetchDailyData = async () => {\n  try {\n    const { data } = await axios.get(`${url}/daily`)\n\n    const modifiedData = data.map((item) => ({\n      confirmed: item.confirmed.total,\n      deaths: item.deaths.total,\n      date: item.reportDate\n    }))\n\n    return modifiedData\n\n  } catch (error) {\n    console.log(error)\n  }\n}\nexport const fetchCountries= async () => {\n  try {\n    const { data } = await axios.get(`${url}/countries`)\n\n    const modifiedData = data.countries.map((country) => ({\n      name: country.name\n    }))\n\n    return modifiedData\n\n  } catch (error) {\n    console.log(error)\n  }\n}","import React from 'react'\nimport { Line, Bar } from 'react-chartjs-2'\nimport { fetchDailyData } from '../../api'\n\nimport styles from './Chart.module.css'\n\nexport default class Chart extends React.Component {\n  state = {\n    dailyData: []\n  }\n\n  async componentDidMount() {\n    const data = await fetchDailyData()\n    this.setState({\n      dailyData: data\n    })\n  }\n\n  render() {\n    const { dailyData } = this.state\n    const { countryData, country } = this.props\n\n    let lineChartData = {}\n    let barChartData = {}\n    let barChartOptions = {}\n\n    if(dailyData.length) {\n      lineChartData = {\n        labels: dailyData.map(({ date }) => date),\n        datasets: [\n          {\n            label: 'Infected',\n            data: dailyData.map(({ confirmed }) => confirmed),\n            borderColor: 'lightblue',\n            fill: true\n          },\n          {\n            label: 'Deaths',\n            data: dailyData.map(({ deaths }) => deaths),\n            borderColor: 'red',\n            backgroundColor: 'rgb(255, 0, 0, 0.2)',\n            fill: true\n          }\n        ]\n      }\n    }\n\n    if(country) {\n      barChartData = {\n        labels: ['Infected', 'Recovered', 'Deaths'],\n        datasets: [{\n          label: 'People',\n          backgroundColor: [\n            'lightblue',\n            'lightgreen',\n            'rgb(255, 0, 0, 0.7)'\n          ],\n          data: [\n            countryData.confirmed.value,\n            countryData.recovered.value,\n            countryData.deaths.value\n          ]\n        }]\n      }\n      barChartOptions = {\n        legend: { display: false },\n        title: { display: true, text: `Current state in ${country}` }\n      }\n    }\n\n    return (\n      <div className={styles.container}>\n        {!country\n          ? <Line data={lineChartData} />\n          : <Bar\n              data={barChartData}\n              options={barChartOptions}\n            />\n        }\n      </div>\n    )\n    // return (\n    //   <span>Hola</span>\n    // )\n  }\n}","import React from 'react'\nimport { FormControl, NativeSelect } from '@material-ui/core'\nimport { fetchCountries } from '../../api'\nimport styles from './CountryPicker.module.css'\n\nexport default class CountryPicker extends React.Component {\n  state = {\n    countries: []\n  }\n\n  async componentDidMount() {\n    const data = await fetchCountries()\n    this.setState({\n      countries: data\n    })\n  }\n\n  render() {\n    const onCountryChange = this.props.onCountryChange\n    const { countries } = this.state\n\n    return (\n      <div className={styles.container} >\n        <FormControl>\n          <NativeSelect defaultValue='' onChange={(e) => onCountryChange(e.target.value)} >\n            <option value=\"\">Global</option>\n            {countries.length &&\n              countries.map((country, index) => (\n                <option key={index} value={country.name}>{country.name}</option>\n              ))\n            }\n          </NativeSelect>\n        </FormControl>\n      </div>\n    )\n  }\n}","import React from 'react';\nimport { Cards, Chart, CountryPicker } from './components'\nimport styles from './App.module.css'\nimport { fetchData } from './api'\nimport covid19 from './images/covid19.png'\n\nclass App extends React.Component {\n  state = {\n    data: {},\n    country: ''\n  }\n\n  async componentDidMount() {\n    const data = await fetchData()\n    this.setState({ data })\n  }\n\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country)\n    this.setState({\n      data,\n      country\n    })\n  }\n\n  render() {\n    const { data, country } = this.state\n\n    return (\n      <div className={styles.container}>\n        <img className ={styles.image} src={covid19} alt='COVID-19' />\n        <Cards data={data}/>\n        <CountryPicker country={this.state.country} onCountryChange={this.handleCountryChange} />\n        <Chart countryData={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryPicker_container__2vyxG\"};","module.exports = __webpack_public_path__ + \"static/media/covid19.d7265326.png\";"],"sourceRoot":""}